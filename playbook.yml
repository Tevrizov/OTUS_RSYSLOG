---

###################################################################################
#----------------------------------------------------------------------------------
#--- ALL

- hosts: all
  become: true


  tasks:

#----- Устанавливаем пакеты---- 
  - name: install packages 
    apt:
      update_cache: yes
      name: "{{ packages }}"
      state: present
    vars:
      packages:
      - ntp
      - mc
 
  - name: Enable a ntp
    ansible.builtin.systemd_service:
      name: ntp
      state: started
      enabled: true

  - name: print /etc/hostname
    shell:
        cat /etc/hostname
    register: results
  - debug:
     var: results.stdout

  - name: print date
    shell:
        date
    register: results
  - debug:
     var: results.stdout

###################################################################################
#----------------------------------------------------------------------------------
#--- WEB
- hosts: web
  become: true

  vars:
    conf_file_nginx: /etc/nginx/nginx.conf 

  handlers:
   - name: restart nginx
     service:
       name: nginx
       state: restarted



  tasks:

  - name: install packages 
    apt:
      update_cache: yes
      name: "{{ packages }}"
      state: present
    vars:
      packages:
      - nginx


  - name: systemctl status nginx
    shell: | 
        systemctl status nginx
        ss -ltn | grep 80
    register: nginx_results_status
  - debug:
     var: nginx_results_status.stdout_lines  



#Проверим версию nginx: 
  - name: version nginx
    shell: 
        nginx -v
    register: nginx_version_status
  - debug:
     var: nginx_version_status.stderr



#Находим в файле /etc/nginx/nginx.conf раздел с логами и приводим их к следующему виду:
  - name: Copy a new "nginx.conf" 
    ansible.builtin.copy:
      src:  conf/nginx.conf
      dest: /etc/nginx/nginx.conf
      owner: root
      group: root
      mode: '0644'

#далее проверяем конфигурацию 
  - name: First check the configuration
    shell: /usr/sbin/nginx -t
    register: test_nginx_config
  - debug:
     var: test_nginx_config.stderr_lines[0]


# и если все ок то прегружаем сервис nginx
  - name: Restart nginx
    service: name=nginx state=restarted
    when: "'syntax is ok' in test_nginx_config.stderr_lines[0]" 

  - name: "end play if nginx -t  - incorrect"
    debug:
      msg: "ginx -t  - incorrect!!!"
    when: "'syntax is ok' not in test_nginx_config.stderr_lines[0]"  
  - meta: end_play


###################################################################################
#----------------------------------------------------------------------------------
#--- LOG
- hosts: log
  become: true

  handlers:
   - name: restart rsyslog
     service:
       name: rsyslog
       state: restarted

   
  tasks:
  - name: status install rsyslog
    shell: 
      sudo apt list rsyslog
    register: rsyslog_results_status
  - debug:
      var: rsyslog_results_status.stdout_lines  

  - name: Set some kernel parameters in /etc/rsyslog.conf
    lineinfile:
      path: "/etc/rsyslog.conf"
      regexp: "{{ item.regexp }}"
      line: "{{ item.line }}"
    loop:
      - { regexp: '^#module(load="imudp")', line: 'module(load="imudp")' }
      - { regexp: '^#input(type="imudp" port="514")', line: 'input(type="imudp" port="514")' }
      - { regexp: '^#module(load="imtcp")', line: 'module(load="imtcp")' }
      - { regexp: '^#input(type="imtcp" port="514")', line: 'input(type="imtcp" port="514")' }
     
  - name: add in /etc/rsyslog.conf
    blockinfile:
      path: "/etc/rsyslog.conf"
      #marker: "------"
      #insertafter: '### AFTER THIS LINE PART 2'
      state: present
      block: |
        #Add remote logs
        $template RemoteLogs,"/var/log/rsyslog/$HOSTNAME%/$PROGRAMNAME%.log"
        *.* ?RemoteLogs
        & ~


  - name:  systemctl restart rsyslog
    shell:  
      sudo systemctl restart rsyslog


#Если ошибок не допущено, то у нас будут видны открытые порты TCP,UDP 514:
#ss -ltn | grep 514
  - name:  status port 
    shell:  
      ss -ltn | grep 514
    register: port_results_status
  - debug:
      var: port_results_status.stdout_lines